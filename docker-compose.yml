version: "3.9"

services:
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
      - "--providers.docker=true"
      - "--api.insecure=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesResolvers.organisationsresolver.acme.email=team@organisations.manager"
      - "--certificatesResolvers.organisationsresolver.acme.storage=acme.json"
      - "--certificatesResolvers.organisationsresolver.acme.httpChallenge.entryPoint=web"
      #      - "--certificatesResolvers.organisationsresolver.acme.caServer=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesResolvers.organisationsresolver.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  database:
    hostname: database
    image: "postgres:13.2-alpine"
    env_file:
      - database.env
    ports:
      - "5432:5432"
  flyway:
    image: flyway/flyway:6.5.6
    command: -url=jdbc:postgresql://database/postgres -user=postgres -password=postgres123 -connectRetries=6 migrate -q
    volumes:
      - ./src/main/resources/db/migration:/flyway/sql
    depends_on:
      - database
  billie:
    build: .
    container_name: "billie-service"
    links:
      - database
      - traefik
    depends_on:
      - traefik
      - database
      - flyway
    env_file:
      - database.env
      - service.env
    ports:
      - "8080:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.billie.rule=PathPrefix(`/swagger-ui`) || PathPrefix(`/organisations`) || PathPrefix(`/countries`)|| PathPrefix(`/shipments`)"
      - "traefik.http.services.billie.loadbalancer.server.port=8080"
      - "traefik.http.routers.billie.rule=Host(`billie.localhost`)"
      - "traefik.http.routers.billie.entrypoints=web"

