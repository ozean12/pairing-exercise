version: "3.9"
services:
  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesResolvers.organisationsresolver.acme.email=team@organisations.manager"
      - "--certificatesResolvers.organisationsresolver.acme.storage=acme.json"
      - "--certificatesResolvers.organisationsresolver.acme.httpChallenge.entryPoint=web"
      #      - "--certificatesResolvers.organisationsresolver.acme.caServer=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesResolvers.organisationsresolver.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  database:
    hostname: database
    image: "postgres:13.2-alpine"
    env_file:
      - database.env
    ports:
      - "5432:5432"
  service:
    build: .
    links:
      - database
      - traefik
    depends_on:
      - traefik
      - database
    env_file:
      - database.env
      - service.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.organisations.rule=PathPrefix(`/swagger-ui`) || PathPrefix(`/organisations`) || PathPrefix(`/countries`)"
      - "traefik.http.services.organisations.loadbalancer.server.port=80"
    environment:
      DATABASE_URL: jdbc:postgresql://database:5432/
    ports:
      - "8080:8080"
